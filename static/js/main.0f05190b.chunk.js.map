{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","state","itsBegin","isSorted","isReversed","sortBy","selectedLength","start","setState","oldState","reverse","SortByAlph","SortByLength","Reset","selectLenght","value","this","visibleGoods","filter","length","sort","currentGood","nextGood","localeCompare","type","onClick","onChange","target","Number","Array","from","keys","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,gBADZ,SAIGE,GAFIA,SCTTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYIC,E,4MACJC,MAAyB,CACvBN,MAAOI,EACPG,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,OAAQ,GACRC,eAAgB,G,EAGlBC,MAAQ,WACN,EAAKC,UAAS,SAACC,GAAD,MAAe,CAC3BP,UAAWO,EAASP,c,EAIxBQ,QAAU,WACR,EAAKF,UAAS,SAACC,GAAD,MAAe,CAC3BL,YAAaK,EAASL,WACtBD,UAAU,O,EAIdQ,WAAa,WACX,EAAKH,SAAS,CAAEH,OAAQ,MAAOF,UAAU,K,EAG3CS,aAAe,WACb,EAAKJ,SAAS,CAAEH,OAAQ,SAAUF,UAAU,K,EAG9CU,MAAQ,WACF,EAAKZ,MAAME,UACb,EAAKK,SAAS,CACZb,MAAOI,EACPK,YAAY,EACZD,UAAU,EACVE,OAAQ,GACRC,eAAgB,K,EAKtBQ,aAAe,SAACC,GACd,EAAKP,SAAS,CAAEF,eAAgBS,K,4CAGlC,WAAU,IAAD,OACP,EAMIC,KAAKf,MALPN,EADF,EACEA,MACAO,EAFF,EAEEA,SACAE,EAHF,EAGEA,WACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,eAGIW,EAAetB,EAAMuB,QACzB,SAAApB,GAAI,OAAIA,EAAKqB,QAAUb,KAoBzB,OAjBAW,EAAaG,MAAK,SAACC,EAAaC,GAC9B,OAAQjB,GACN,IAAK,MACH,OAAOgB,EAAYE,cAAcD,GAEnC,IAAK,SACH,OAAOD,EAAYF,OAASG,EAASH,OAEvC,QACE,OAAO,MAITf,GACFa,EAAaP,UAIb,qBAAKd,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACGM,EAEG,wBACEN,UAAU,+BACV4B,KAAK,SACLC,QAAST,KAAKT,MAHhB,mBASA,sBAAKX,UAAU,qBAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,uCACA,wBACEA,UAAU,oBACV4B,KAAK,SACLC,QAAST,KAAKH,MAHhB,sBAQF,qBAAKjB,UAAU,GAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAWD,MAAOsB,QAGtB,sBAAKrB,UAAU,kCAAf,UACE,wBACEA,UAAU,oBACV4B,KAAK,SACLC,QAAST,KAAKN,QAHhB,qBAOA,wBACEd,UAAU,oBACV4B,KAAK,SACLC,QAAST,KAAKL,WAHhB,yBAOA,wBACEf,UAAU,oBACV4B,KAAK,SACLC,QAAST,KAAKJ,aAHhB,4BAOA,qBAAKhB,UAAU,oBAAf,SACE,wBACEmB,MAAOT,EACPoB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX,EAAKb,aAAac,OAAOD,EAAOZ,SAHpC,SAMGc,MAAMC,KAAKD,MAAM,IAAIE,QAAQlC,KAAI,SAACmC,GAAD,OAChC,wBAEEjB,MAAOiB,EAFT,SAIGA,GAHIA,wB,GA1IbC,IAAMC,WA6JTlC,ICpLfmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0f05190b.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.css';\n\nexport type Goods = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Goods> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li\n          className=\"subtitle is-5\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[],\n  itsBegin : boolean,\n  isSorted :boolean,\n  isReversed: boolean,\n  sortBy: string,\n  selectedLength: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    goods: goodsFromServer,\n    itsBegin: true,\n    isSorted: false,\n    isReversed: false,\n    sortBy: '',\n    selectedLength: 1,\n  };\n\n  start = () => {\n    this.setState((oldState) => ({\n      itsBegin: !oldState.itsBegin,\n    }));\n  };\n\n  reverse = () => {\n    this.setState((oldState) => ({\n      isReversed: !oldState.isReversed,\n      isSorted: true,\n    }));\n  };\n\n  SortByAlph = () => {\n    this.setState({ sortBy: 'A-Z', isSorted: true });\n  };\n\n  SortByLength = () => {\n    this.setState({ sortBy: 'Length', isSorted: true });\n  };\n\n  Reset = () => {\n    if (this.state.isSorted) {\n      this.setState({\n        goods: goodsFromServer,\n        isReversed: false,\n        isSorted: false,\n        sortBy: '',\n        selectedLength: 1,\n      });\n    }\n  };\n\n  selectLenght = (value: number) => {\n    this.setState({ selectedLength: value });\n  };\n\n  render() {\n    const {\n      goods,\n      itsBegin,\n      isReversed,\n      sortBy,\n      selectedLength,\n    } = this.state;\n\n    const visibleGoods = goods.filter(\n      good => good.length >= selectedLength,\n    );\n\n    visibleGoods.sort((currentGood, nextGood) => {\n      switch (sortBy) {\n        case 'A-Z':\n          return currentGood.localeCompare(nextGood);\n\n        case 'Length':\n          return currentGood.length - nextGood.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {itsBegin\n            ? (\n              <button\n                className=\"button is-success level-item\"\n                type=\"button\"\n                onClick={this.start}\n              >\n                Start\n              </button>\n            )\n            : (\n              <div className=\"message is-primary\">\n                <div className=\"message-header title is-3 level\">\n                  <h1>Goods</h1>\n                  <button\n                    className=\"button is-warning\"\n                    type=\"button\"\n                    onClick={this.Reset}\n                  >\n                    Reset\n                  </button>\n                </div>\n                <div className=\"\">\n                  <div className=\"container\">\n                    <GoodsList goods={visibleGoods} />\n                  </div>\n                </div>\n                <div className=\"buttons-container content level\">\n                  <button\n                    className=\"button is-primary\"\n                    type=\"button\"\n                    onClick={this.reverse}\n                  >\n                    Reverse\n                  </button>\n                  <button\n                    className=\"button is-primary\"\n                    type=\"button\"\n                    onClick={this.SortByAlph}\n                  >\n                    Sort by A-Z\n                  </button>\n                  <button\n                    className=\"button is-primary\"\n                    type=\"button\"\n                    onClick={this.SortByLength}\n                  >\n                    Sort by lenght\n                  </button>\n                  <div className=\"select is-success\">\n                    <select\n                      value={selectedLength}\n                      onChange={({ target }) => {\n                        this.selectLenght(Number(target.value));\n                      }}\n                    >\n                      {Array.from(Array(11).keys()).map((item) => (\n                        <option\n                          key={item}\n                          value={item}\n                        >\n                          {item}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n            )}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}